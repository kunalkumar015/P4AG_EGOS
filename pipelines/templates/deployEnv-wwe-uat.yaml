parameters:
# stage_name - (Optional) The name of the stage, so that it can be referenced elsewhere (eg for dependsOn property). 
# Defaults to 'Deploy_Environment'
- name: stage_name
  type: string
  default: 'Deploy_Environment'
# depends_on - (Optional) The array of stages that this stage depends on. Default is that this stage does not depend on 
# any other stage. However, since this is a deployment stage, you'll probably want to specify a build stage that
# this stage depends on.
- name: depends_on
  type: object
  default: []
# environment_name - (Required) The environment to deploy to. Can be used to introduce a manual gate for approval for stage to proceed
- name: environment_name
  type: string
# AzureServiceConnection - (Required) The name of the service connection that connects Azure DevOps
# to Azure Resource Manager. Go to Service Connections in Azure DevOps to setup the connection and assign permissions
# for pipelines to access it
- name: AzureServiceConnection
  type: string
# BootstrapAzureRegion - (Optional) The azure region where the bootstrapped terraform state file is to be stored 
# for all deployments to an environment.
- name: BootstrapAzureRegion
  type: string
  default: ''
# AzureRegion - (Required) The azure region where the environment will be deployed.
- name: AzureRegion
  type: string
- name: SubscriptionId
  type: string
# Environment - (Required) The name of environment to deploy
- name: Environment
  type: string
# OrganizationalPrefix - (Required) The organizational prefix to seed into globaly unique names for resources.
- name: OrganizationalPrefix
  type: string
- name: TerraformBackingStoreContainerName
  type: string

stages:
- stage: ${{ parameters.stage_name }}
  dependsOn: ${{ parameters.depends_on }}
  variables:
  - ${{ if eq(parameters.BootstrapAzureRegion, '') }}:
    - name: bootstrapAzureRegion
      value: ${{ parameters.AzureRegion }}
  - ${{ if not(eq(parameters.BootstrapAzureRegion, '')) }}:
    - name: bootstrapAzureRegion
      value: ${{ parameters.BootstrapAzureRegion }}
  - name: TerraformBackingStoreStateFileName
    # value: 'ga-eastus2/terraform.tfstate'
    value: 'wwe-uat-infrastructure/terraform.tfstate'
  - name: InfrastructureRelativePath
    value: iac/wwe-uat
  - name: TFInstanceNumber
    value: "01"
  - name: AdditionalTerraformVariables
    value: ""
  pool:
    name: $(pool)
    #vmImage: $(poolImage)
  jobs:
  - job: PlanWWEGAInfrastructure
    displayName: Run Plan for Deployment of WWE GA Infrastructure to Azure
    timeoutInMinutes: 130
    steps:
    - checkout: self
      persistCredentials: true
      path: self
    - checkout: commonPipeline
      persistCredentials: true
      path: commonPipeline
    - template: templates/bootstrap-infrastructure.yaml@commonPipeline
      parameters:
        AzureServiceConnection: ${{parameters.AzureServiceConnection}}
        AzureRegion: $(bootstrapAzureRegion)
        SubscriptionId: ${{parameters.SubscriptionId}}
        Environment: ${{parameters.Environment}}
        OrganizationalPrefix: ${{parameters.OrganizationalPrefix}}
        InstanceNumber: $(TFInstanceNumber)
        TerraformBackingStoreResourceGroupName: rg-wwe-${{parameters.Environment}}
        TerraformBackingStoreContainerName: ${{parameters.TerraformBackingStoreContainerName}}
        WorkingPath: $(Agent.BuildDirectory)/commonPipeline
    - template: templates/deploy-infrastructure.yaml@commonPipeline
      parameters:
        Action: preview
        AzureServiceConnection: ${{parameters.AzureServiceConnection}}
        AzureRegion: ${{parameters.AzureRegion}}
        SubscriptionId: ${{parameters.SubscriptionId}}
        Environment: ${{parameters.Environment}}
        EnvironmentTier: ${{parameters.Environment}}-${{parameters.AzureRegion}}
        OrganizationalPrefix: ${{parameters.OrganizationalPrefix}}
        TerraformBackingStoreSubscriptionId: ${{parameters.SubscriptionId}}
        TerraformBackingStoreResourceGroupName: rg-wwe-${{parameters.Environment}}
        TerraformBackingStoreResourceGroupLocation: $(bootstrapAzureRegion)
        TerraformBackingStoreStorageAccountName: $(ArmOutputs.tfStateSAName)
        TerraformBackingStoreContainerName: ${{parameters.TerraformBackingStoreContainerName}}
        TerraformBackingStoreStateFileName: $(TerraformBackingStoreStateFileName)
        TerraformPlanName: 'wwega_${{parameters.Environment}}'
        AdditionalTerraformVariables: $(AdditionalTerraformVariables)
        WorkingPath: $(Agent.BuildDirectory)/self
        InfrastructureRelativePath: $(InfrastructureRelativePath)
  - job: waitForValidation
    dependsOn: ['PlanWWEGAInfrastructure']
    variables:
    - name: planHasChanges
      value: $[ dependencies.PlanWWEGAInfrastructure.outputs['tfplan.TERRAFORM_PLAN_HAS_CHANGES']]
    pool: server
    timeoutInMinutes: 4320 # job times out in 3 days
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 1440 # task times out in 1 day
      condition: and(succeeded(), eq(variables['planHasChanges'], true))
      inputs:
        instructions: 'Please validate the terraform plan configuration and resume'
  - deployment: DeployWWEGAInfrastructure
    displayName: Deploy WWE GA Infrastructure to Azure
    dependsOn: ['waitForValidation']
    environment: ${{ parameters.environment_name }}
    timeoutInMinutes: 720 # TF timeout deployment in 12 hours
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            persistCredentials: true
            path: self
          - checkout: commonPipeline
            persistCredentials: true
            path: commonPipeline
          - template: templates/bootstrap-infrastructure.yaml@commonPipeline
            parameters:
              AzureServiceConnection: ${{parameters.AzureServiceConnection}}
              AzureRegion: $(bootstrapAzureRegion)
              SubscriptionId: ${{parameters.SubscriptionId}}
              Environment: ${{parameters.Environment}}
              OrganizationalPrefix: ${{parameters.OrganizationalPrefix}}
              InstanceNumber: $(TFInstanceNumber)
              TerraformBackingStoreResourceGroupName: rg-wwe-${{parameters.Environment}}
              TerraformBackingStoreContainerName: ${{parameters.TerraformBackingStoreContainerName}}
              WorkingPath: $(Agent.BuildDirectory)/commonPipeline
          - template: templates/deploy-infrastructure.yaml@commonPipeline
            parameters:
              Action: deploy
              AzureServiceConnection: ${{parameters.AzureServiceConnection}}
              AzureRegion: ${{parameters.AzureRegion}}
              SubscriptionId: ${{parameters.SubscriptionId}}
              Environment: ${{parameters.Environment}}
              EnvironmentTier: ${{parameters.Environment}}-${{parameters.AzureRegion}}
              OrganizationalPrefix: ${{parameters.OrganizationalPrefix}}
              TerraformBackingStoreSubscriptionId: ${{parameters.SubscriptionId}}
              TerraformBackingStoreResourceGroupName: rg-wwe-${{parameters.Environment}}
              TerraformBackingStoreResourceGroupLocation: $(bootstrapAzureRegion)
              TerraformBackingStoreStorageAccountName: $(ArmOutputs.tfStateSAName)
              TerraformBackingStoreContainerName: ${{parameters.TerraformBackingStoreContainerName}}
              TerraformBackingStoreStateFileName: $(TerraformBackingStoreStateFileName)
              AdditionalTerraformVariables: $(AdditionalTerraformVariables)
              WorkingPath: $(Agent.BuildDirectory)/self
              InfrastructureRelativePath: $(InfrastructureRelativePath)